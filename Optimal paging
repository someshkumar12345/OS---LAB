#include <stdio.h>

int findOptimal(int pages[], int frame[], int n, int index, int f) {
    int farthest = index, pos = -1, i, j;
    for (i = 0; i < f; i++) {
        int found = 0;
        for (j = index; j < n; j++) {
            if (frame[i] == pages[j]) {
                if (j > farthest) {
                    farthest = j;
                    pos = i;
                }
                found = 1;
                break;
            }
        }
        if (!found)
            return i;
    }
    return (pos == -1) ? 0 : pos;
}

int main() {
    int n, f, pages[30], frame[10], i, j, pos, faults = 0, flag;

    printf("Enter number of pages: ");
    scanf("%d", &n);
    printf("Enter reference string: ");
    for (i = 0; i < n; i++)
        scanf("%d", &pages[i]);

    printf("Enter number of frames: ");
    scanf("%d", &f);

    for (i = 0; i < f; i++)
        frame[i] = -1;

    printf("\nPage Reference String -> Frames\n");
    for (i = 0; i < n; i++) {
        flag = 0;
        for (j = 0; j < f; j++) {
            if (frame[j] == pages[i]) {
                flag = 1;
                break;
            }
        }
        if (!flag) {
            pos = findOptimal(pages, frame, n, i + 1, f);
            frame[pos] = pages[i];
            faults++;
        }
        printf("%d -> ", pages[i]);
        for (j = 0; j < f; j++)
            if (frame[j] != -1)
                printf("%d ", frame[j]);
        printf("\n");
    }
    printf("\nTotal Page Faults = %d\n", faults);
    return 0;
} Optimal
